version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    ECR_REPO_URI: "203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd"
    ECS_CLUSTER: "ecs-node-cicd-cluster"
    ECS_SERVICE: "ecs-nodejs-service"

phases:
  pre_build:
    commands:
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - IMAGE_TAG=${COMMIT_HASH}-${TIMESTAMP}

  build:
    commands:
      - echo "Building Docker image..."
      - docker build --pull --no-cache -t $ECR_REPO_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo "Pushing image to ECR..."
      - docker push $ECR_REPO_URI:$IMAGE_TAG
      

      - echo "Creating imagedefinitions.json..."
      - mkdir -p build
      - printf '[{"name":"ecs-nodejs-container","imageUri":"%s"}]' "$ECR_REPO_URI:$IMAGE_TAG" > build/imagedefinitions.json

      - echo "Updating task definition..."
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition nodejs-webapp-task-def)
      - NEW_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$ECR_REPO_URI:$IMAGE_TAG" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn,.revision,.status,.requiresAttributes,.compatibilities)')
      - aws ecs register-task-definition --cli-input-json "$NEW_DEFINITION"

      - echo "Forcing ECS deployment..."
      - aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION

artifacts:
  files:
    - build/imagedefinitions.json
  discard-paths: yes
