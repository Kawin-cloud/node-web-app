version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - IMAGE_TAG=${COMMIT_HASH}-${TIMESTAMP}

  build:
    commands:
      - echo "Building Docker image..."
      - docker build --pull --no-cache -t 203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd:$IMAGE_TAG .

  post_build:
    commands:
      - echo "Pushing image to ECR..."
      - docker push 203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd:$IMAGE_TAG
      
      - echo "Creating deployment artifacts..."
      - mkdir -p build
      - printf '[{"name":"ecs-nodejs-container","imageUri":"%s"}]' "203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd:$IMAGE_TAG" > build/imagedefinitions.json

      - echo "Updating task definition..."
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition nodejs-webapp-task-def)


      - echo "Modifying task definition..."
      - NEW_DEFINITION=$(echo $TASK_DEFINITION | jq '
          .taskDefinition |
          del(
            .taskDefinitionArn,
            .revision,
            .status,
            .requiresAttributes,
            .compatibilities,
            .registeredAt,
            .registeredBy
          ) |
          .containerDefinitions[0].image = "203918847581.dkr.ecr.us-east-1.amazonaws.com/ecs-node-cicd:'"$IMAGE_TAG"'"')
      
      - echo "Registering new task definition..."
      - aws ecs register-task-definition --cli-input-json "$NEW_DEFINITION"
      
      - echo "Triggering ECS deployment..."
      - aws ecs update-service \
          --cluster ecs-node-cicd-cluster \
          --service ecs-nodejs-service \
          --force-new-deployment \
          --region us-east-1

artifacts:
  files:
    - build/imagedefinitions.json
  discard-paths: yes
