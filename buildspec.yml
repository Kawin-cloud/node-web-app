version: 0.2

env:
  variables:
    IMAGE_TAG: "latest"  # Use a static tag for simplicity (or use a dynamic tag like Git commit hash)
    CONTAINER_NAME: "my-nodejs-website"  # Name of the Docker container
    HOST_PORT: "4000"  # Host port to map
    CONTAINER_PORT: "3000"  # Container port to expose

phases:
  install:
    runtime-versions:
      nodejs: 14  # Use the Node.js version your app requires
    commands:
      - echo "Installing dependencies..."
      - npm install  # Install Node.js dependencies

  build:
    commands:
      - echo "Building the application..."
      - npm test  # Run tests (if you have a test script in package.json)

  post_build:
    commands:
      - echo "Stopping and removing existing container..."
      - docker stop $CONTAINER_NAME || true  # Stop the container (ignore errors if it doesn't exist)
      - docker rm $CONTAINER_NAME || true  # Remove the container (ignore errors if it doesn't exist)

      - echo "Building Docker image..."
      - docker build -t my-nodejs-website:$IMAGE_TAG .  # Build the Docker image

      - echo "Running new Docker container..."
      - docker run -d -p $HOST_PORT:$CONTAINER_PORT --name $CONTAINER_NAME my-nodejs-website:$IMAGE_TAG  # Run the container

artifacts:
  files:
    - '**/*'  # Include all files as artifacts (optional)
  discard-paths: yes  # Discard directory structure in the artifact
